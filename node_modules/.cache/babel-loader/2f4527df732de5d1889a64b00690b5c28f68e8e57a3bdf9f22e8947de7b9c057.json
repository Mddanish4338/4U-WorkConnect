{"ast":null,"code":"var _jsxFileName = \"/home/infinity/DANISH/6th sem/4U/4u/src/pages/Dashboard/UserDashboard.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { collection, query, where, getDocs, limit } from 'firebase/firestore';\n// import { db } from '../../firebase/config';\n// import { useAuth } from '../../context/AuthContext';\n// import Card from '../../components/Card';\n// import PricePopup from '../../components/PricePopup';\n// import '../../styles/dashboard.css';\n\n// const UserDashboard = () => {\n//   const [workers, setWorkers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [selectedWorker, setSelectedWorker] = useState(null);\n//   const [showPopup, setShowPopup] = useState(false);\n//   const [bookings, setBookings] = useState([]);\n//   const { user } = useAuth();\n\n//   useEffect(() => {\n//     const fetchWorkers = async () => {\n//       try {\n//         const workersRef = collection(db, 'workers');\n//         const q = query(workersRef, limit(4));\n//         const querySnapshot = await getDocs(q);\n\n//         const workersData = [];\n//         querySnapshot.forEach((doc) => {\n//           workersData.push({ id: doc.id, ...doc.data() });\n//         });\n\n//         setWorkers(workersData);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error(\"Error fetching workers:\", error);\n//         setLoading(false);\n//       }\n//     };\n\n//     const fetchBookings = async () => {\n//       if (!user) return;\n\n//       try {\n//         const bookingsRef = collection(db, 'bookings');\n//         const q = query(bookingsRef, where('userId', '==', user.uid));\n//         const querySnapshot = await getDocs(q);\n\n//         const bookingsData = [];\n//         querySnapshot.forEach((doc) => {\n//           bookingsData.push({ id: doc.id, ...doc.data() });\n//         });\n\n//         setBookings(bookingsData);\n//       } catch (error) {\n//         console.error(\"Error fetching bookings:\", error);\n//       }\n//     };\n\n//     fetchWorkers();\n//     fetchBookings();\n//   }, [user]);\n\n//   const handleBook = (worker) => {\n//     setSelectedWorker(worker);\n//     setShowPopup(true);\n//   };\n\n//   const handleBookingSubmit = async (bookingData) => {\n//     try {\n//       console.log('Booking data:', {\n//         ...bookingData,\n//         userId: user.uid,\n//         userName: user.name || user.email,\n//         status: 'confirmed',\n//         createdAt: new Date()\n//       });\n\n//       alert('Booking successful!');\n//       setShowPopup(false);\n//     } catch (error) {\n//       console.error('Error creating booking:', error);\n//       alert('Error creating booking');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <div className=\"dashboard-header\">\n//         <h1>Welcome, {user?.name || user?.email}</h1>\n//         <p>Here's what's happening with your account today.</p>\n//       </div>\n\n//       <div className=\"dashboard-sections\">\n//         <section className=\"recommended-workers\">\n//           <h2>Recommended Workers</h2>\n//           {loading ? (\n//             <div className=\"loading\">Loading workers...</div>\n//           ) : (\n//             <div className=\"workers-grid\">\n//               {workers.map((worker) => (\n//                 <div key={worker.id} className=\"worker-card-wrapper\">\n//                   <Card worker={worker} />\n//                   <button \n//                     className=\"book-now-btn\"\n//                     onClick={() => handleBook(worker)}\n//                   >\n//                     Book Now\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n\n//         <section className=\"upcoming-bookings\">\n//           <h2>Your Upcoming Bookings</h2>\n//           {bookings.length === 0 ? (\n//             <div className=\"no-bookings\">\n//               <p>You don't have any upcoming bookings.</p>\n//               <button onClick={() => window.location.href = '/hire'}>Find Workers</button>\n//             </div>\n//           ) : (\n//             <div className=\"bookings-list\">\n//               {bookings.map((booking) => (\n//                 <div key={booking.id} className=\"booking-card\">\n//                   <h3>{booking.workerName}</h3>\n//                   <p>Date: {booking.date}</p>\n//                   <p>Time: {booking.time}</p>\n//                   <p>Duration: {booking.hours} hours</p>\n//                   <p>Total: ${booking.total}</p>\n//                   <p>Status: <span className={`status ${booking.status}`}>{booking.status}</span></p>\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n//       </div>\n\n//       {showPopup && selectedWorker && (\n//         <PricePopup \n//           worker={selectedWorker} \n//           onClose={() => setShowPopup(false)}\n//           onBook={handleBookingSubmit}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\nimport { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, doc, updateDoc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase/config';\nimport { useAuth } from '../../context/AuthContext';\nimport Card from '../../components/Card';\nimport PricePopup from '../../components/PricePopup';\nimport { toast } from 'react-toastify';\nimport '../../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedWorker, setSelectedWorker] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [bookings, setBookings] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        const workersRef = collection(db, 'workers');\n        const q = query(workersRef, limit(4));\n        const querySnapshot = await getDocs(q);\n        const workersData = [];\n        querySnapshot.forEach(doc => {\n          workersData.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setWorkers(workersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching workers:\", error);\n        setLoading(false);\n      }\n    };\n    const fetchBookings = async () => {\n      if (!user) return;\n      try {\n        const bookingsRef = collection(db, 'bookings');\n        const q = query(bookingsRef, where('userId', '==', user.uid));\n        const querySnapshot = await getDocs(q);\n        const bookingsData = [];\n        querySnapshot.forEach(doc => {\n          bookingsData.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setBookings(bookingsData);\n      } catch (error) {\n        console.error(\"Error fetching bookings:\", error);\n      }\n    };\n    fetchWorkers();\n    fetchBookings();\n\n    // Set up real-time listener for booking status updates\n    const unsubscribe = onSnapshot(query(collection(db, 'bookings'), where('userId', '==', user.uid)), snapshot => {\n      const updatedBookings = [];\n      snapshot.docChanges().forEach(change => {\n        if (change.type === 'modified') {\n          const updatedBooking = {\n            id: change.doc.id,\n            ...change.doc.data()\n          };\n          updatedBookings.push(updatedBooking);\n\n          // Show notification for status changes\n          if (change.doc.data().status === 'confirmed') {\n            toast.success(`Your booking with ${updatedBooking.workerName} has been confirmed!`);\n          } else if (change.doc.data().status === 'rejected') {\n            toast.warning(`Your booking with ${updatedBooking.workerName} has been rejected.`);\n          }\n        }\n      });\n      if (updatedBookings.length > 0) {\n        setBookings(prev => prev.map(booking => updatedBookings.find(ub => ub.id === booking.id) || booking));\n      }\n    });\n    return () => unsubscribe();\n  }, [user]);\n  const handleBook = worker => {\n    setSelectedWorker(worker);\n    setShowPopup(true);\n  };\n  const handleBookingSubmit = async bookingData => {\n    try {\n      // Here you would add the booking to Firestore\n      // For now, we'll just log it\n      console.log('Booking data:', {\n        ...bookingData,\n        userId: user.uid,\n        userName: user.name || user.email,\n        status: 'pending',\n        // Changed to pending for worker approval\n        createdAt: new Date()\n      });\n      toast.info('Booking request sent! The worker will respond soon.');\n      setShowPopup(false);\n    } catch (error) {\n      console.error('Error creating booking:', error);\n      toast.error('Error creating booking');\n    }\n  };\n  const handleCancelBooking = async bookingId => {\n    try {\n      // Update booking status to cancelled\n      const bookingRef = doc(db, 'bookings', bookingId);\n      await updateDoc(bookingRef, {\n        status: 'cancelled',\n        cancelledAt: new Date()\n      });\n\n      // Update local state\n      setBookings(bookings.map(booking => booking.id === bookingId ? {\n        ...booking,\n        status: 'cancelled'\n      } : booking));\n      toast.success('Booking cancelled successfully!');\n    } catch (error) {\n      console.error('Error cancelling booking:', error);\n      toast.error('Error cancelling booking');\n    }\n  };\n  const getStatusBadge = status => {\n    switch (status) {\n      case 'pending':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status pending\",\n          children: \"Pending Approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 16\n        }, this);\n      case 'confirmed':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status confirmed\",\n          children: \"Confirmed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 16\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 16\n        }, this);\n      case 'rejected':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status rejected\",\n          children: \"Rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 16\n        }, this);\n      case 'cancelled':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status cancelled\",\n          children: \"Cancelled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status unknown\",\n          children: \"Unknown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.email)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here's what's happening with your account today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recommended-workers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Workers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading workers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workers-grid\",\n          children: workers.map(worker => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"worker-card-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              worker: worker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"book-now-btn\",\n              onClick: () => handleBook(worker),\n              children: \"Book Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, worker.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"booking-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-tabs\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab active\",\n            children: \"All Bookings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-bookings\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You don't have any bookings yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.href = '/hire',\n            children: \"Find Workers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookings-container\",\n          children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `booking-card ${booking.status}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: booking.workerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), getStatusBadge(booking.status)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Service:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 24\n                }, this), \" \", booking.workerProfession]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 24\n                }, this), \" \", booking.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 24\n                }, this), \" \", booking.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Duration:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 24\n                }, this), \" \", booking.hours, \" hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 24\n                }, this), \" $\", booking.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-actions\",\n              children: [booking.status === 'pending' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-btn\",\n                onClick: () => handleCancelBooking(booking.id),\n                children: \"Cancel Booking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this), booking.status === 'confirmed' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"complete-btn\",\n                onClick: () => handleCompleteBooking(booking.id),\n                children: \"Mark as Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 23\n              }, this), booking.status === 'rejected' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"book-again-btn\",\n                onClick: () => handleBookAgain(booking.workerId),\n                children: \"Book Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)]\n          }, booking.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), showPopup && selectedWorker && /*#__PURE__*/_jsxDEV(PricePopup, {\n      worker: selectedWorker,\n      onClose: () => setShowPopup(false),\n      onBook: handleBookingSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"MwENU/tgDH6Vi2IxHupEvaRzfQw=\", false, function () {\n  return [useAuth];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["useState","useEffect","collection","query","where","getDocs","limit","doc","updateDoc","onSnapshot","db","useAuth","Card","PricePopup","toast","jsxDEV","_jsxDEV","UserDashboard","_s","workers","setWorkers","loading","setLoading","selectedWorker","setSelectedWorker","showPopup","setShowPopup","bookings","setBookings","user","fetchWorkers","workersRef","q","querySnapshot","workersData","forEach","push","id","data","error","console","fetchBookings","bookingsRef","uid","bookingsData","unsubscribe","snapshot","updatedBookings","docChanges","change","type","updatedBooking","status","success","workerName","warning","length","prev","map","booking","find","ub","handleBook","worker","handleBookingSubmit","bookingData","log","userId","userName","name","email","createdAt","Date","info","handleCancelBooking","bookingId","bookingRef","cancelledAt","getStatusBadge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","workerProfession","date","time","hours","total","handleCompleteBooking","handleBookAgain","workerId","onClose","onBook","_c","$RefreshReg$"],"sources":["/home/infinity/DANISH/6th sem/4U/4u/src/pages/Dashboard/UserDashboard.jsx"],"sourcesContent":["// import { useState, useEffect } from 'react';\n// import { collection, query, where, getDocs, limit } from 'firebase/firestore';\n// import { db } from '../../firebase/config';\n// import { useAuth } from '../../context/AuthContext';\n// import Card from '../../components/Card';\n// import PricePopup from '../../components/PricePopup';\n// import '../../styles/dashboard.css';\n\n// const UserDashboard = () => {\n//   const [workers, setWorkers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [selectedWorker, setSelectedWorker] = useState(null);\n//   const [showPopup, setShowPopup] = useState(false);\n//   const [bookings, setBookings] = useState([]);\n//   const { user } = useAuth();\n\n//   useEffect(() => {\n//     const fetchWorkers = async () => {\n//       try {\n//         const workersRef = collection(db, 'workers');\n//         const q = query(workersRef, limit(4));\n//         const querySnapshot = await getDocs(q);\n        \n//         const workersData = [];\n//         querySnapshot.forEach((doc) => {\n//           workersData.push({ id: doc.id, ...doc.data() });\n//         });\n        \n//         setWorkers(workersData);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error(\"Error fetching workers:\", error);\n//         setLoading(false);\n//       }\n//     };\n\n//     const fetchBookings = async () => {\n//       if (!user) return;\n      \n//       try {\n//         const bookingsRef = collection(db, 'bookings');\n//         const q = query(bookingsRef, where('userId', '==', user.uid));\n//         const querySnapshot = await getDocs(q);\n        \n//         const bookingsData = [];\n//         querySnapshot.forEach((doc) => {\n//           bookingsData.push({ id: doc.id, ...doc.data() });\n//         });\n        \n//         setBookings(bookingsData);\n//       } catch (error) {\n//         console.error(\"Error fetching bookings:\", error);\n//       }\n//     };\n\n//     fetchWorkers();\n//     fetchBookings();\n//   }, [user]);\n\n//   const handleBook = (worker) => {\n//     setSelectedWorker(worker);\n//     setShowPopup(true);\n//   };\n\n//   const handleBookingSubmit = async (bookingData) => {\n//     try {\n//       console.log('Booking data:', {\n//         ...bookingData,\n//         userId: user.uid,\n//         userName: user.name || user.email,\n//         status: 'confirmed',\n//         createdAt: new Date()\n//       });\n      \n//       alert('Booking successful!');\n//       setShowPopup(false);\n//     } catch (error) {\n//       console.error('Error creating booking:', error);\n//       alert('Error creating booking');\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <div className=\"dashboard-header\">\n//         <h1>Welcome, {user?.name || user?.email}</h1>\n//         <p>Here's what's happening with your account today.</p>\n//       </div>\n      \n//       <div className=\"dashboard-sections\">\n//         <section className=\"recommended-workers\">\n//           <h2>Recommended Workers</h2>\n//           {loading ? (\n//             <div className=\"loading\">Loading workers...</div>\n//           ) : (\n//             <div className=\"workers-grid\">\n//               {workers.map((worker) => (\n//                 <div key={worker.id} className=\"worker-card-wrapper\">\n//                   <Card worker={worker} />\n//                   <button \n//                     className=\"book-now-btn\"\n//                     onClick={() => handleBook(worker)}\n//                   >\n//                     Book Now\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n        \n//         <section className=\"upcoming-bookings\">\n//           <h2>Your Upcoming Bookings</h2>\n//           {bookings.length === 0 ? (\n//             <div className=\"no-bookings\">\n//               <p>You don't have any upcoming bookings.</p>\n//               <button onClick={() => window.location.href = '/hire'}>Find Workers</button>\n//             </div>\n//           ) : (\n//             <div className=\"bookings-list\">\n//               {bookings.map((booking) => (\n//                 <div key={booking.id} className=\"booking-card\">\n//                   <h3>{booking.workerName}</h3>\n//                   <p>Date: {booking.date}</p>\n//                   <p>Time: {booking.time}</p>\n//                   <p>Duration: {booking.hours} hours</p>\n//                   <p>Total: ${booking.total}</p>\n//                   <p>Status: <span className={`status ${booking.status}`}>{booking.status}</span></p>\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//         </section>\n//       </div>\n      \n//       {showPopup && selectedWorker && (\n//         <PricePopup \n//           worker={selectedWorker} \n//           onClose={() => setShowPopup(false)}\n//           onBook={handleBookingSubmit}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserDashboard;\n\n\n\nimport { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, limit, doc, updateDoc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase/config';\nimport { useAuth } from '../../context/AuthContext';\nimport Card from '../../components/Card';\nimport PricePopup from '../../components/PricePopup';\nimport { toast } from 'react-toastify';\nimport '../../styles/dashboard.css';\n\nconst UserDashboard = () => {\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedWorker, setSelectedWorker] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [bookings, setBookings] = useState([]);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        const workersRef = collection(db, 'workers');\n        const q = query(workersRef, limit(4));\n        const querySnapshot = await getDocs(q);\n        \n        const workersData = [];\n        querySnapshot.forEach((doc) => {\n          workersData.push({ id: doc.id, ...doc.data() });\n        });\n        \n        setWorkers(workersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching workers:\", error);\n        setLoading(false);\n      }\n    };\n\n    const fetchBookings = async () => {\n      if (!user) return;\n      \n      try {\n        const bookingsRef = collection(db, 'bookings');\n        const q = query(bookingsRef, where('userId', '==', user.uid));\n        const querySnapshot = await getDocs(q);\n        \n        const bookingsData = [];\n        querySnapshot.forEach((doc) => {\n          bookingsData.push({ id: doc.id, ...doc.data() });\n        });\n        \n        setBookings(bookingsData);\n      } catch (error) {\n        console.error(\"Error fetching bookings:\", error);\n      }\n    };\n\n    fetchWorkers();\n    fetchBookings();\n\n    // Set up real-time listener for booking status updates\n    const unsubscribe = onSnapshot(\n      query(collection(db, 'bookings'), where('userId', '==', user.uid)),\n      (snapshot) => {\n        const updatedBookings = [];\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'modified') {\n            const updatedBooking = { id: change.doc.id, ...change.doc.data() };\n            updatedBookings.push(updatedBooking);\n            \n            // Show notification for status changes\n            if (change.doc.data().status === 'confirmed') {\n              toast.success(`Your booking with ${updatedBooking.workerName} has been confirmed!`);\n            } else if (change.doc.data().status === 'rejected') {\n              toast.warning(`Your booking with ${updatedBooking.workerName} has been rejected.`);\n            }\n          }\n        });\n        \n        if (updatedBookings.length > 0) {\n          setBookings(prev => \n            prev.map(booking => \n              updatedBookings.find(ub => ub.id === booking.id) || booking\n            )\n          );\n        }\n      }\n    );\n\n    return () => unsubscribe();\n  }, [user]);\n\n  const handleBook = (worker) => {\n    setSelectedWorker(worker);\n    setShowPopup(true);\n  };\n\n  const handleBookingSubmit = async (bookingData) => {\n    try {\n      // Here you would add the booking to Firestore\n      // For now, we'll just log it\n      console.log('Booking data:', {\n        ...bookingData,\n        userId: user.uid,\n        userName: user.name || user.email,\n        status: 'pending', // Changed to pending for worker approval\n        createdAt: new Date()\n      });\n      \n      toast.info('Booking request sent! The worker will respond soon.');\n      setShowPopup(false);\n    } catch (error) {\n      console.error('Error creating booking:', error);\n      toast.error('Error creating booking');\n    }\n  };\n\n  const handleCancelBooking = async (bookingId) => {\n    try {\n      // Update booking status to cancelled\n      const bookingRef = doc(db, 'bookings', bookingId);\n      await updateDoc(bookingRef, {\n        status: 'cancelled',\n        cancelledAt: new Date()\n      });\n      \n      // Update local state\n      setBookings(bookings.map(booking => \n        booking.id === bookingId ? {...booking, status: 'cancelled'} : booking\n      ));\n      \n      toast.success('Booking cancelled successfully!');\n    } catch (error) {\n      console.error('Error cancelling booking:', error);\n      toast.error('Error cancelling booking');\n    }\n  };\n\n  const getStatusBadge = (status) => {\n    switch(status) {\n      case 'pending':\n        return <span className=\"status pending\">Pending Approval</span>;\n      case 'confirmed':\n        return <span className=\"status confirmed\">Confirmed</span>;\n      case 'completed':\n        return <span className=\"status completed\">Completed</span>;\n      case 'rejected':\n        return <span className=\"status rejected\">Rejected</span>;\n      case 'cancelled':\n        return <span className=\"status cancelled\">Cancelled</span>;\n      default:\n        return <span className=\"status unknown\">Unknown</span>;\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>Welcome, {user?.name || user?.email}</h1>\n        <p>Here's what's happening with your account today.</p>\n      </div>\n      \n      <div className=\"dashboard-sections\">\n        <section className=\"recommended-workers\">\n          <h2>Recommended Workers</h2>\n          {loading ? (\n            <div className=\"loading\">Loading workers...</div>\n          ) : (\n            <div className=\"workers-grid\">\n              {workers.map((worker) => (\n                <div key={worker.id} className=\"worker-card-wrapper\">\n                  <Card worker={worker} />\n                  <button \n                    className=\"book-now-btn\"\n                    onClick={() => handleBook(worker)}\n                  >\n                    Book Now\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        \n        <section className=\"booking-status\">\n          <h2>Your Bookings</h2>\n          \n          <div className=\"booking-tabs\">\n            <div className=\"tab active\">All Bookings</div>\n          </div>\n          \n          {bookings.length === 0 ? (\n            <div className=\"no-bookings\">\n              <p>You don't have any bookings yet.</p>\n              <button onClick={() => window.location.href = '/hire'}>Find Workers</button>\n            </div>\n          ) : (\n            <div className=\"bookings-container\">\n              {bookings.map((booking) => (\n                <div key={booking.id} className={`booking-card ${booking.status}`}>\n                  <div className=\"booking-header\">\n                    <h3>{booking.workerName}</h3>\n                    {getStatusBadge(booking.status)}\n                  </div>\n                  <div className=\"booking-details\">\n                    <p><strong>Service:</strong> {booking.workerProfession}</p>\n                    <p><strong>Date:</strong> {booking.date}</p>\n                    <p><strong>Time:</strong> {booking.time}</p>\n                    <p><strong>Duration:</strong> {booking.hours} hours</p>\n                    <p><strong>Total:</strong> ${booking.total}</p>\n                  </div>\n                  <div className=\"booking-actions\">\n                    {booking.status === 'pending' && (\n                      <button \n                        className=\"cancel-btn\"\n                        onClick={() => handleCancelBooking(booking.id)}\n                      >\n                        Cancel Booking\n                      </button>\n                    )}\n                    {booking.status === 'confirmed' && (\n                      <button \n                        className=\"complete-btn\"\n                        onClick={() => handleCompleteBooking(booking.id)}\n                      >\n                        Mark as Completed\n                      </button>\n                    )}\n                    {booking.status === 'rejected' && (\n                      <button \n                        className=\"book-again-btn\"\n                        onClick={() => handleBookAgain(booking.workerId)}\n                      >\n                        Book Again\n                      </button>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n      </div>\n      \n      {showPopup && selectedWorker && (\n        <PricePopup \n          worker={selectedWorker} \n          onClose={() => setShowPopup(false)}\n          onBook={handleBookingSubmit}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserDashboard;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,QAAQ,oBAAoB;AACzG,SAASC,EAAE,QAAQ,uBAAuB;AAC1C,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,cAAc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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}