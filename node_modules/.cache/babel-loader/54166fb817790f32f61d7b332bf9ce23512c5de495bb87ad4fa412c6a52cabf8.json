{"ast":null,"code":"var _jsxFileName = \"/home/infinity/DANISH/6th sem/4U/4u/src/pages/Services.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport Card from '../components/Card';\nimport '../styles/services.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        const workersRef = collection(db, 'workers');\n        const querySnapshot = await getDocs(workersRef);\n        const workersData = [];\n        querySnapshot.forEach(doc => {\n          workersData.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setWorkers(workersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching workers:\", error);\n        setLoading(false);\n      }\n    };\n    fetchWorkers();\n  }, []);\n  const filteredWorkers = filter === 'all' ? workers : workers.filter(worker => worker.profession.toLowerCase() === filter);\n  const professions = [...new Set(workers.map(worker => worker.profession))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === 'all' ? 'active' : ''}`,\n        onClick: () => setFilter('all'),\n        children: \"All Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), professions.map(prof => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === prof.toLowerCase() ? 'active' : ''}`,\n        onClick: () => setFilter(prof.toLowerCase()),\n        children: prof\n      }, prof, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading workers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workers-grid\",\n      children: filteredWorkers.length > 0 ? filteredWorkers.map(worker => /*#__PURE__*/_jsxDEV(Card, {\n        worker: worker\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No workers found for this service.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"35g0JU/t8Y35vP5XEiCazNSdfkI=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["useState","useEffect","collection","getDocs","db","Card","jsxDEV","_jsxDEV","Services","_s","workers","setWorkers","loading","setLoading","filter","setFilter","fetchWorkers","workersRef","querySnapshot","workersData","forEach","doc","push","id","data","error","console","filteredWorkers","worker","profession","toLowerCase","professions","Set","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prof","length","_c","$RefreshReg$"],"sources":["/home/infinity/DANISH/6th sem/4U/4u/src/pages/Services.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport Card from '../components/Card';\nimport '../styles/services.css';\n\nconst Services = () => {\n  const [workers, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    const fetchWorkers = async () => {\n      try {\n        const workersRef = collection(db, 'workers');\n        const querySnapshot = await getDocs(workersRef);\n        \n        const workersData = [];\n        querySnapshot.forEach((doc) => {\n          workersData.push({ id: doc.id, ...doc.data() });\n        });\n        \n        setWorkers(workersData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching workers:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchWorkers();\n  }, []);\n\n  const filteredWorkers = filter === 'all' \n    ? workers \n    : workers.filter(worker => worker.profession.toLowerCase() === filter);\n\n  const professions = [...new Set(workers.map(worker => worker.profession))];\n\n  return (\n    <div className=\"services-page\">\n      <h1>Our Services</h1>\n      \n      <div className=\"filters\">\n        <button \n          className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n          onClick={() => setFilter('all')}\n        >\n          All Services\n        </button>\n        \n        {professions.map((prof) => (\n          <button\n            key={prof}\n            className={`filter-btn ${filter === prof.toLowerCase() ? 'active' : ''}`}\n            onClick={() => setFilter(prof.toLowerCase())}\n          >\n            {prof}\n          </button>\n        ))}\n      </div>\n      \n      {loading ? (\n        <div className=\"loading\">Loading workers...</div>\n      ) : (\n        <div className=\"workers-grid\">\n          {filteredWorkers.length > 0 ? (\n            filteredWorkers.map((worker) => (\n              <Card key={worker.id} worker={worker} />\n            ))\n          ) : (\n            <div className=\"no-results\">No workers found for this service.</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Services;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,UAAU,GAAGf,UAAU,CAACE,EAAE,EAAE,SAAS,CAAC;QAC5C,MAAMc,aAAa,GAAG,MAAMf,OAAO,CAACc,UAAU,CAAC;QAE/C,MAAME,WAAW,GAAG,EAAE;QACtBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7BF,WAAW,CAACG,IAAI,CAAC;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;UAAE,CAAC,CAAC;QACjD,CAAC,CAAC;QAEFb,UAAU,CAACQ,WAAW,CAAC;QACvBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,eAAe,GAAGb,MAAM,KAAK,KAAK,GACpCJ,OAAO,GACPA,OAAO,CAACI,MAAM,CAACc,MAAM,IAAIA,MAAM,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,KAAKhB,MAAM,CAAC;EAExE,MAAMiB,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACtB,OAAO,CAACuB,GAAG,CAACL,MAAM,IAAIA,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;EAE1E,oBACEtB,OAAA;IAAK2B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5B,OAAA;MAAA4B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBhC,OAAA;MAAK2B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB5B,OAAA;QACE2B,SAAS,EAAE,cAAcpB,MAAM,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC5D0B,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC,KAAK,CAAE;QAAAoB,QAAA,EACjC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERR,WAAW,CAACE,GAAG,CAAEQ,IAAI,iBACpBlC,OAAA;QAEE2B,SAAS,EAAE,cAAcpB,MAAM,KAAK2B,IAAI,CAACX,WAAW,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzEU,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC0B,IAAI,CAACX,WAAW,CAAC,CAAC,CAAE;QAAAK,QAAA,EAE5CM;MAAI,GAJAA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKH,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL3B,OAAO,gBACNL,OAAA;MAAK2B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEjDhC,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BR,eAAe,CAACe,MAAM,GAAG,CAAC,GACzBf,eAAe,CAACM,GAAG,CAAEL,MAAM,iBACzBrB,OAAA,CAACF,IAAI;QAAiBuB,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACL,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACxC,CAAC,gBAEFhC,OAAA;QAAK2B,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACpE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAvEID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}