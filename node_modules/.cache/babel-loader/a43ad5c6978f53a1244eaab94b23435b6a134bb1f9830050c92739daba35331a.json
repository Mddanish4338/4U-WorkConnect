{"ast":null,"code":"var _jsxFileName = \"/home/infinity/DANISH/6th sem/4U/4u/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// import { Navigate, Outlet } from 'react-router-dom';\n// import { useAuth } from '../context/AuthContext';\n\n// export function ProtectedRoute({ allowedRoles }) {\n//   const { user, loading } = useAuth();\n\n//   if (loading) return <div>Loading...</div>;\n\n//   if (!user) return <Navigate to=\"/login\" replace />;\n\n//   if (allowedRoles && !allowedRoles.includes(user.role)) {\n//     return <Navigate to=\"/\" replace />;\n//   }\n\n//   return <Outlet />;\n// }\n\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProtectedRoute({\n  allowedRoles\n}) {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","allowedRoles","_s","user","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","includes","role","_c","$RefreshReg$"],"sources":["/home/infinity/DANISH/6th sem/4U/4u/src/components/ProtectedRoute.jsx"],"sourcesContent":["// import { Navigate, Outlet } from 'react-router-dom';\n// import { useAuth } from '../context/AuthContext';\n\n// export function ProtectedRoute({ allowedRoles }) {\n//   const { user, loading } = useAuth();\n\n//   if (loading) return <div>Loading...</div>;\n\n//   if (!user) return <Navigate to=\"/login\" replace />;\n\n//   if (allowedRoles && !allowedRoles.includes(user.role)) {\n//     return <Navigate to=\"/\" replace />;\n//   }\n\n//   return <Outlet />;\n// }\n\n\n\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nexport function ProtectedRoute({ allowedRoles }) {\n  const { user, loading } = useAuth();\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!user) return <Navigate to=\"/login\" replace />;\n\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <Outlet />;\n}"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAIA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,cAAcA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEnC,IAAIO,OAAO,EAAE,oBAAOL,OAAA;IAAAM,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,IAAI,CAACN,IAAI,EAAE,oBAAOJ,OAAA,CAACJ,QAAQ;IAACe,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAElD,IAAIR,YAAY,IAAI,CAACA,YAAY,CAACW,QAAQ,CAACT,IAAI,CAACU,IAAI,CAAC,EAAE;IACrD,oBAAOd,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,oBAAOV,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACP,EAAA,CAZeF,cAAc;EAAA,QACFH,OAAO;AAAA;AAAAiB,EAAA,GADnBd,cAAc;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}